"""
Django settings for beautyofportugal project.
Generated by 'django-admin startproject' using Django 3.1.6.
"""

from pathlib import Path
import os
import dj_database_url
import json
import base64
import tempfile
from google.oauth2 import service_account
# -----------------------------
# Base Directory
# -----------------------------
BASE_DIR = Path(__file__).resolve().parent.parent

# -----------------------------
# Security
# -----------------------------
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'dev-secret-key')  # set in Railway
DEBUG = os.getenv("DEBUG", "False").lower() in ("true", "1")

ALLOWED_HOSTS = ['beautyofportugal-production.up.railway.app','www.beautyofportugal.com','https://www.beautyofportugal.com']
CSRF_TRUSTED_ORIGINS = ['https://beautyofportugal-production.up.railway.app','https://www.beautyofportugal.com']

# -----------------------------
# Stripe
# -----------------------------
STRIPE_SECRET_KEY = os.getenv('STRIPE_SECRET_KEY')
STRIPE_PUBLISHABLE_KEY = os.getenv('STRIPE_PUBLISHABLE_KEY')

RECAPTCHA_SECRET_KEY = os.getenv('RECAPTCHA_SECRET_KEY')

# -----------------------------
# Installed apps
# -----------------------------
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'landing',
    'cms',
    'accounts',
    'tinymce',
    'cart',
    'whitenoise.runserver_nostatic',
    'storages'
]

# -----------------------------
# Middleware
# -----------------------------
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

# -----------------------------
# URLs and WSGI
# -----------------------------
ROOT_URLCONF = 'beautyofportugal.urls'

WSGI_APPLICATION = 'beautyofportugal.wsgi.application'

# -----------------------------
# Templates
# -----------------------------
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'cart.context_processors.cart_count',
                'accounts.context_processors.user_profile'
            ],
        },
    },
]

# -----------------------------
# Database
# -----------------------------
DATABASES = {
    'default': dj_database_url.config(
        default=os.getenv('DATABASE_URL'),  # Railway provides this
        conn_max_age=600,
        ssl_require=True
    )
}

# -----------------------------
# Password validation
# -----------------------------
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# -----------------------------
# Internationalization
# -----------------------------
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# -----------------------------
# Static files
# -----------------------------
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
STATIC_ROOT = BASE_DIR / 'staticfiles'


# -----------------------------
# Media files
# -----------------------------

# --- Load service account creds from base64 Railway var
# --- Load service account creds from base64 Railway var

if not DEBUG:
    GCP_KEY_BASE64 = os.getenv("GCP_KEY_BASE64")
    if not GCP_KEY_BASE64:
        raise ValueError("GCP_KEY_BASE64 is not set")

    service_account_info = json.loads(base64.b64decode(GCP_KEY_BASE64))
    GS_CREDENTIALS = service_account.Credentials.from_service_account_info(service_account_info)

    GS_BUCKET_NAME = os.getenv("GS_BUCKET_NAME", "bop-media")
    GS_LOCATION = os.getenv("GS_LOCATION", "media")

    # --- Django storage settings (Django >= 4.2) ---
    STORAGES = {
        "default": {
            "BACKEND": "utils.storage_backends.GoogleCloudMediaStorage",
        },
        "staticfiles": {
            "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
        },
    }

    MEDIA_URL = f"https://storage.googleapis.com/{GS_BUCKET_NAME}/{GS_LOCATION}/"

else:
    MEDIA_URL = '/media/'
    MEDIA_ROOT = BASE_DIR / 'media'
    # --- Local storage settings (Django >= 4.2) ---
    STORAGES = {
        "default": {
            "BACKEND": "django.core.files.storage.FileSystemStorage",
            "OPTIONS": {
                "location": MEDIA_ROOT,
            },
        },
        "staticfiles": {
            "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
        },
    }


# -----------------------------
# TinyMCE
# -----------------------------
TINYMCE_DEFAULT_CONFIG = {
    'height': 500,
    'width': '100%',
    'plugins': 'image link media code',
    'toolbar': 'undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | outdent indent | link image media | code',
    'image_caption': True,
    'automatic_uploads': True,
    'file_picker_types': 'image',
    "images_upload_url": "/upload-image-tinymce/",
    "relative_urls": False,
    "remove_script_host": False,
}

# -----------------------------
# Email
# -----------------------------
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp-relay.brevo.com'
EMAIL_PORT = 465   # change to 465
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True
EMAIL_HOST_USER = '93c4da001@smtp-brevo.com'
EMAIL_HOST_PASSWORD = os.getenv('SENDBLUE_SMTP_API_KEY')
